<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:batch="http://www.springframework.org/schema/batch"
  xmlns:task="http://www.springframework.org/schema/task"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/batch
  http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
  http://www.springframework.org/schema/beans 
  http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

  <import resource="../config/context.xml" />

  <bean id="jobConfigurer"
    class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="ignoreUnresolvablePlaceholders" value="true"/>
    <property name="locations">
      <list>
        <value>classpath:spring/batch/job.properties</value>
      </list>
    </property>
  </bean>

  <!--Batch JDBC operation with Spring Batch provided classes -->
  <batch:job id="job">
    <batch:step id="job.truncateOutTable" next="job.elt">
      <batch:tasklet ref="truncateOutTableTasklet" />
    </batch:step>
    <batch:step id="job.elt">
      <batch:tasklet>
        <batch:chunk reader="reader" processor="processor" writer="writer"
          commit-interval="20">
        </batch:chunk>
      </batch:tasklet>
    </batch:step>
  </batch:job>

  <bean id="truncateOutTableTasklet"
    class="net.lingyanzhou.mybatis_spring_learning.tasklet.ExecuteSqlTasklet">
    <constructor-arg name="dataSource" ref="dataSource" />
    <constructor-arg name="sql">
      <value>
        <![CDATA[ 
        TRUNCATE TABLE out_table
        ]]>
      </value>
    </constructor-arg>
  </bean>

  <bean id="reader"
    class="org.springframework.batch.item.database.JdbcCursorItemReader">
    <property name="dataSource" ref="dataSource" />
    <property name="sql">
      <value>
        <![CDATA[        
        SELECT it_id, it_data FROM in_table
        ]]>
      </value>
    </property>

    <property name="rowMapper">
      <bean
        class="net.lingyanzhou.mybatis_spring_learning.rowmapper.InTableRowMapper" />
    </property>
  </bean>

  <bean id="processor" class="net.lingyanzhou.mybatis_spring_learning.processor.MergeInRelatedProcessor">
    <constructor-arg name="inRelatedMapper" ref="inRelatedMapper" />
  </bean>

  <bean id="writer"
    class="org.springframework.batch.item.database.JdbcBatchItemWriter">
    <property name="dataSource" ref="dataSource" />
    <property name="sql">
      <value>
        <![CDATA[ 
        INSERT INTO out_table VALUES(?,?, NOW())

        ]]>
      </value>
    </property>
    <property name="itemPreparedStatementSetter">
      <bean
        class="net.lingyanzhou.mybatis_spring_learning.statementsetter.OutTableInsertStatementSetter" />
    </property>
  </bean>


  <!--Batch JDBC operation with Mybatis classes -->
  <batch:job id="job-mybatis-paged">
    <batch:step id="job-mybatis-paged.truncateOutTable" next="job-mybatis-paged.elt">
      <batch:tasklet ref="truncateOutTableTasklet" />
    </batch:step>
    <batch:step id="job-mybatis-paged.elt">
      <batch:tasklet>
        <batch:chunk reader="reader-mybatis-paged" processor="processor" writer="writer-mybatis"
          commit-interval="20">
        </batch:chunk>
      </batch:tasklet>
    </batch:step>
  </batch:job>

  <batch:job id="job-mybatis-cursor">
    <batch:step id="job-mybatis-cursor.truncateOutTable" next="job-mybatis-cursor.elt">
      <batch:tasklet ref="truncateOutTableTasklet" />
    </batch:step>
    <batch:step id="job-mybatis-cursor.elt">
      <batch:tasklet>
        <batch:chunk reader="reader-mybatis-cursor" processor="processor" writer="writer-mybatis"
          commit-interval="20">
        </batch:chunk>
      </batch:tasklet>
    </batch:step>
  </batch:job>


  <bean id="reader-mybatis-paged" class="org.mybatis.spring.batch.MyBatisPagingItemReader">
    <property name="sqlSessionFactory" ref="batchSqlSessionFactory" />
    <property name="queryId" value="net.lingyanzhou.mybatis_spring_learning.mapper.InTableBatchMapper.getDataPaged" />
  </bean> 

  <bean id="reader-mybatis-cursor" class="org.mybatis.spring.batch.MyBatisCursorItemReader">
    <property name="sqlSessionFactory" ref="batchSqlSessionFactory" />
    <property name="queryId" value="net.lingyanzhou.mybatis_spring_learning.mapper.InTableBatchMapper.getData" />
  </bean> 


  <bean id="writer-mybatis" class="org.mybatis.spring.batch.MyBatisBatchItemWriter">
    <property name="sqlSessionFactory" ref="batchSqlSessionFactory" />
    <property name="statementId" value="net.lingyanzhou.mybatis_spring_learning.mapper.OutTableBatchMapper.insertInTable" />
  </bean>

</beans>
